# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pyslvs_ui/widgets/main.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from qtpy import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(928, 690)
        MainWindow.setMouseTracking(True)
        MainWindow.setAcceptDrops(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/main.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.central_widget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.central_widget.sizePolicy().hasHeightForWidth())
        self.central_widget.setSizePolicy(sizePolicy)
        self.central_widget.setObjectName("central_widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.central_widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.main_splitter = QtWidgets.QSplitter(self.central_widget)
        self.main_splitter.setOrientation(QtCore.Qt.Horizontal)
        self.main_splitter.setObjectName("main_splitter")
        self.main_panel = QtWidgets.QTabWidget(self.main_splitter)
        self.main_panel.setTabPosition(QtWidgets.QTabWidget.West)
        self.main_panel.setObjectName("main_panel")
        self.mechanism_tab = QtWidgets.QWidget()
        self.mechanism_tab.setObjectName("mechanism_tab")
        self.verticalLayout_27 = QtWidgets.QVBoxLayout(self.mechanism_tab)
        self.verticalLayout_27.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.mechanism_panel_splitter = QtWidgets.QSplitter(self.mechanism_tab)
        self.mechanism_panel_splitter.setOrientation(QtCore.Qt.Vertical)
        self.mechanism_panel_splitter.setObjectName("mechanism_panel_splitter")
        self.EntitiesTabWidget = QtWidgets.QWidget(self.mechanism_panel_splitter)
        self.EntitiesTabWidget.setObjectName("EntitiesTabWidget")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.EntitiesTabWidget)
        self.verticalLayout_29.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.entities_tab = QtWidgets.QTabWidget(self.EntitiesTabWidget)
        self.entities_tab.setObjectName("entities_tab")
        self.PointsTab = QtWidgets.QWidget()
        self.PointsTab.setObjectName("PointsTab")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.PointsTab)
        self.verticalLayout_9.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.entities_point_widget = QtWidgets.QWidget(self.PointsTab)
        self.entities_point_widget.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.entities_point_widget.setObjectName("entities_point_widget")
        self.entities_point_layout = QtWidgets.QVBoxLayout(self.entities_point_widget)
        self.entities_point_layout.setContentsMargins(0, 0, 0, 0)
        self.entities_point_layout.setObjectName("entities_point_layout")
        self.verticalLayout_9.addWidget(self.entities_point_widget)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/bearing.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.entities_tab.addTab(self.PointsTab, icon1, "")
        self.LinksTab = QtWidgets.QWidget()
        self.LinksTab.setObjectName("LinksTab")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.LinksTab)
        self.verticalLayout_19.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.entities_link_widget = QtWidgets.QWidget(self.LinksTab)
        self.entities_link_widget.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.entities_link_widget.setObjectName("entities_link_widget")
        self.entities_link_layout = QtWidgets.QVBoxLayout(self.entities_link_widget)
        self.entities_link_layout.setContentsMargins(0, 0, 0, 0)
        self.entities_link_layout.setObjectName("entities_link_layout")
        self.verticalLayout_19.addWidget(self.entities_link_widget)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/link.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.entities_tab.addTab(self.LinksTab, icon2, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.EntitiesExpr_widget = QtWidgets.QWidget(self.tab)
        self.EntitiesExpr_widget.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.EntitiesExpr_widget.setObjectName("EntitiesExpr_widget")
        self.entities_expr_layout = QtWidgets.QVBoxLayout(self.EntitiesExpr_widget)
        self.entities_expr_layout.setContentsMargins(0, 0, 0, 0)
        self.entities_expr_layout.setObjectName("entities_expr_layout")
        self.verticalLayout_8.addWidget(self.EntitiesExpr_widget)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/configure.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.entities_tab.addTab(self.tab, icon3, "")
        self.verticalLayout_29.addWidget(self.entities_tab)
        self.MechanismsTabWidget = QtWidgets.QWidget(self.mechanism_panel_splitter)
        self.MechanismsTabWidget.setObjectName("MechanismsTabWidget")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.MechanismsTabWidget)
        self.verticalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.MechanismPanelSplitterLine = QtWidgets.QFrame(self.MechanismsTabWidget)
        self.MechanismPanelSplitterLine.setLineWidth(3)
        self.MechanismPanelSplitterLine.setFrameShape(QtWidgets.QFrame.HLine)
        self.MechanismPanelSplitterLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.MechanismPanelSplitterLine.setObjectName("MechanismPanelSplitterLine")
        self.verticalLayout_21.addWidget(self.MechanismPanelSplitterLine)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.mechanism_storage_name_tag_text = QtWidgets.QLabel(self.MechanismsTabWidget)
        self.mechanism_storage_name_tag_text.setObjectName("mechanism_storage_name_tag_text")
        self.horizontalLayout_11.addWidget(self.mechanism_storage_name_tag_text)
        self.mechanism_storage_name_tag = QtWidgets.QLineEdit(self.MechanismsTabWidget)
        self.mechanism_storage_name_tag.setClearButtonEnabled(True)
        self.mechanism_storage_name_tag.setObjectName("mechanism_storage_name_tag")
        self.horizontalLayout_11.addWidget(self.mechanism_storage_name_tag)
        self.verticalLayout_4.addLayout(self.horizontalLayout_11)
        self.mechanism_storage = QtWidgets.QListWidget(self.MechanismsTabWidget)
        self.mechanism_storage.setObjectName("mechanism_storage")
        self.verticalLayout_4.addWidget(self.mechanism_storage)
        self.horizontalLayout_9.addLayout(self.verticalLayout_4)
        self.verticalLayout_20 = QtWidgets.QVBoxLayout()
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.mechanism_storage_add = QtWidgets.QPushButton(self.MechanismsTabWidget)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/data.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mechanism_storage_add.setIcon(icon4)
        self.mechanism_storage_add.setObjectName("mechanism_storage_add")
        self.verticalLayout_20.addWidget(self.mechanism_storage_add)
        self.mechanism_storage_restore = QtWidgets.QPushButton(self.MechanismsTabWidget)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/data_update.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mechanism_storage_restore.setIcon(icon5)
        self.mechanism_storage_restore.setObjectName("mechanism_storage_restore")
        self.verticalLayout_20.addWidget(self.mechanism_storage_restore)
        self.line_4 = QtWidgets.QFrame(self.MechanismsTabWidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_20.addWidget(self.line_4)
        self.mechanism_storage_copy = QtWidgets.QPushButton(self.MechanismsTabWidget)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/copy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mechanism_storage_copy.setIcon(icon6)
        self.mechanism_storage_copy.setObjectName("mechanism_storage_copy")
        self.verticalLayout_20.addWidget(self.mechanism_storage_copy)
        self.mechanism_storage_paste = QtWidgets.QPushButton(self.MechanismsTabWidget)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/paste.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mechanism_storage_paste.setIcon(icon7)
        self.mechanism_storage_paste.setObjectName("mechanism_storage_paste")
        self.verticalLayout_20.addWidget(self.mechanism_storage_paste)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_20.addItem(spacerItem)
        self.mechanism_storage_delete = QtWidgets.QPushButton(self.MechanismsTabWidget)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mechanism_storage_delete.setIcon(icon8)
        self.mechanism_storage_delete.setObjectName("mechanism_storage_delete")
        self.verticalLayout_20.addWidget(self.mechanism_storage_delete)
        self.horizontalLayout_9.addLayout(self.verticalLayout_20)
        self.verticalLayout_21.addLayout(self.horizontalLayout_9)
        self.verticalLayout_27.addWidget(self.mechanism_panel_splitter)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/mechanism.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.main_panel.addTab(self.mechanism_tab, icon9, "")
        self.inputs_tab = QtWidgets.QWidget()
        self.inputs_tab.setObjectName("inputs_tab")
        self.inputs_tab_layout = QtWidgets.QVBoxLayout(self.inputs_tab)
        self.inputs_tab_layout.setObjectName("inputs_tab_layout")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/motor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.main_panel.addTab(self.inputs_tab, icon10, "")
        self.synthesis_tab = QtWidgets.QWidget()
        self.synthesis_tab.setObjectName("synthesis_tab")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.synthesis_tab)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.synthesis_tab_widget = QtWidgets.QTabWidget(self.synthesis_tab)
        self.synthesis_tab_widget.setObjectName("synthesis_tab_widget")
        self.verticalLayout_10.addWidget(self.synthesis_tab_widget)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/synthesis.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.main_panel.addTab(self.synthesis_tab, icon11, "")
        self.project_tab = QtWidgets.QWidget()
        self.project_tab.setObjectName("project_tab")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.project_tab)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.project_layout = QtWidgets.QVBoxLayout()
        self.project_layout.setObjectName("project_layout")
        self.verticalLayout_5.addLayout(self.project_layout)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/id.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.main_panel.addTab(self.project_tab, icon12, "")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.main_splitter)
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.canvas_layout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.canvas_layout.setContentsMargins(0, 0, 0, 0)
        self.canvas_layout.setObjectName("canvas_layout")
        self.middle_line = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.middle_line.setLineWidth(5)
        self.middle_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.middle_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.middle_line.setObjectName("middle_line")
        self.canvas_layout.addWidget(self.middle_line)
        self.canvas_splitter = QtWidgets.QSplitter(self.horizontalLayoutWidget)
        self.canvas_splitter.setOrientation(QtCore.Qt.Vertical)
        self.canvas_splitter.setHandleWidth(3)
        self.canvas_splitter.setObjectName("canvas_splitter")
        self.nav_toolbar = QtWidgets.QWidget(self.canvas_splitter)
        self.nav_toolbar.setMaximumSize(QtCore.QSize(16777215, 50))
        self.nav_toolbar.setObjectName("nav_toolbar")
        self.nav_layout = QtWidgets.QHBoxLayout(self.nav_toolbar)
        self.nav_layout.setContentsMargins(3, 3, 3, 3)
        self.nav_layout.setObjectName("nav_layout")
        self.zoom_button = QtWidgets.QPushButton(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zoom_button.sizePolicy().hasHeightForWidth())
        self.zoom_button.setSizePolicy(sizePolicy)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/fullscreen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.zoom_button.setIcon(icon13)
        self.zoom_button.setIconSize(QtCore.QSize(32, 32))
        self.zoom_button.setObjectName("zoom_button")
        self.nav_layout.addWidget(self.zoom_button)
        self.zoom_bar = QtWidgets.QSlider(self.nav_toolbar)
        self.zoom_bar.setMinimum(50)
        self.zoom_bar.setMaximum(5000)
        self.zoom_bar.setSingleStep(50)
        self.zoom_bar.setPageStep(50)
        self.zoom_bar.setSliderPosition(50)
        self.zoom_bar.setOrientation(QtCore.Qt.Horizontal)
        self.zoom_bar.setInvertedControls(False)
        self.zoom_bar.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.zoom_bar.setTickInterval(200)
        self.zoom_bar.setObjectName("zoom_bar")
        self.nav_layout.addWidget(self.zoom_bar)
        self.reset_canvas_button = QtWidgets.QPushButton(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reset_canvas_button.sizePolicy().hasHeightForWidth())
        self.reset_canvas_button.setSizePolicy(sizePolicy)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/aim.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reset_canvas_button.setIcon(icon14)
        self.reset_canvas_button.setIconSize(QtCore.QSize(32, 32))
        self.reset_canvas_button.setObjectName("reset_canvas_button")
        self.nav_layout.addWidget(self.reset_canvas_button)
        self.alignment_button = QtWidgets.QToolButton(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.alignment_button.sizePolicy().hasHeightForWidth())
        self.alignment_button.setSizePolicy(sizePolicy)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/vertical_align.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.alignment_button.setIcon(icon15)
        self.alignment_button.setIconSize(QtCore.QSize(32, 32))
        self.alignment_button.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.alignment_button.setObjectName("alignment_button")
        self.nav_layout.addWidget(self.alignment_button)
        self.free_move_button = QtWidgets.QPushButton(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.free_move_button.sizePolicy().hasHeightForWidth())
        self.free_move_button.setSizePolicy(sizePolicy)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/free_move_off.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.free_move_button.setIcon(icon16)
        self.free_move_button.setIconSize(QtCore.QSize(32, 32))
        self.free_move_button.setObjectName("free_move_button")
        self.nav_layout.addWidget(self.free_move_button)
        self.dof_lable = QtWidgets.QLabel(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dof_lable.sizePolicy().hasHeightForWidth())
        self.dof_lable.setSizePolicy(sizePolicy)
        self.dof_lable.setObjectName("dof_lable")
        self.nav_layout.addWidget(self.dof_lable)
        self.dof_view = QtWidgets.QLabel(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dof_view.sizePolicy().hasHeightForWidth())
        self.dof_view.setSizePolicy(sizePolicy)
        self.dof_view.setText("")
        self.dof_view.setObjectName("dof_view")
        self.nav_layout.addWidget(self.dof_view)
        self.conflict = QtWidgets.QLabel(self.nav_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.conflict.sizePolicy().hasHeightForWidth())
        self.conflict.setSizePolicy(sizePolicy)
        self.conflict.setTextFormat(QtCore.Qt.RichText)
        self.conflict.setObjectName("conflict")
        self.nav_layout.addWidget(self.conflict)
        self.console_widget = QtWidgets.QWidget(self.canvas_splitter)
        self.console_widget.setObjectName("console_widget")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.console_widget)
        self.verticalLayout_11.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.console_toolbar = QtWidgets.QWidget(self.console_widget)
        self.console_toolbar.setObjectName("console_toolbar")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.console_toolbar)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_3 = QtWidgets.QLabel(self.console_toolbar)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_5.addWidget(self.label_3)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem1)
        self.console_disconnect_button = QtWidgets.QPushButton(self.console_toolbar)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/disconnect.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.console_disconnect_button.setIcon(icon17)
        self.console_disconnect_button.setObjectName("console_disconnect_button")
        self.horizontalLayout_5.addWidget(self.console_disconnect_button)
        self.console_connect_button = QtWidgets.QPushButton(self.console_toolbar)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/connect.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.console_connect_button.setIcon(icon18)
        self.console_connect_button.setObjectName("console_connect_button")
        self.horizontalLayout_5.addWidget(self.console_connect_button)
        self.line_2 = QtWidgets.QFrame(self.console_toolbar)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_5.addWidget(self.line_2)
        self.clear_console = QtWidgets.QPushButton(self.console_toolbar)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/clean.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.clear_console.setIcon(icon19)
        self.clear_console.setObjectName("clear_console")
        self.horizontalLayout_5.addWidget(self.clear_console)
        self.verticalLayout_11.addWidget(self.console_toolbar)
        self.console_widget_browser = QtWidgets.QTextBrowser(self.console_widget)
        self.console_widget_browser.setObjectName("console_widget_browser")
        self.verticalLayout_11.addWidget(self.console_widget_browser)
        self.canvas_layout.addWidget(self.canvas_splitter)
        self.verticalLayout.addWidget(self.main_splitter)
        MainWindow.setCentralWidget(self.central_widget)
        self.menu_bar = QtWidgets.QMenuBar(MainWindow)
        self.menu_bar.setGeometry(QtCore.QRect(0, 0, 928, 39))
        self.menu_bar.setObjectName("menu_bar")
        self.menu_file = QtWidgets.QMenu(self.menu_bar)
        self.menu_file.setStatusTip("")
        self.menu_file.setObjectName("menu_file")
        self.menu_mechanism = QtWidgets.QMenu(self.menu_bar)
        self.menu_mechanism.setObjectName("menu_mechanism")
        self.menu_options = QtWidgets.QMenu(self.menu_bar)
        self.menu_options.setObjectName("menu_options")
        self.menu_help = QtWidgets.QMenu(self.menu_bar)
        self.menu_help.setObjectName("menu_help")
        self.menu_edit = QtWidgets.QMenu(self.menu_bar)
        self.menu_edit.setObjectName("menu_edit")
        MainWindow.setMenuBar(self.menu_bar)
        self.status_bar = QtWidgets.QStatusBar(MainWindow)
        self.status_bar.setObjectName("status_bar")
        MainWindow.setStatusBar(self.status_bar)
        self.action_new_project = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/new_file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new_project.setIcon(icon20)
        self.action_new_project.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.action_new_project.setObjectName("action_new_project")
        self.action_new_point = QtWidgets.QAction(MainWindow)
        self.action_new_point.setIcon(icon1)
        self.action_new_point.setObjectName("action_new_point")
        self.action_new_link = QtWidgets.QAction(MainWindow)
        self.action_new_link.setIcon(icon2)
        self.action_new_link.setObjectName("action_new_link")
        self.action_exit = QtWidgets.QAction(MainWindow)
        self.action_exit.setCheckable(False)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_exit.setIcon(icon21)
        self.action_exit.setObjectName("action_exit")
        self.action_mde_tw = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/kmol.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_mde_tw.setIcon(icon22)
        self.action_mde_tw.setObjectName("action_mde_tw")
        self.action_github_repository = QtWidgets.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/github.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_github_repository.setIcon(icon23)
        self.action_github_repository.setObjectName("action_github_repository")
        self.action_about = QtWidgets.QAction(MainWindow)
        self.action_about.setIcon(icon)
        self.action_about.setObjectName("action_about")
        self.action_full_screen = QtWidgets.QAction(MainWindow)
        self.action_full_screen.setCheckable(True)
        self.action_full_screen.setIcon(icon13)
        self.action_full_screen.setObjectName("action_full_screen")
        self.action_delete_point = QtWidgets.QAction(MainWindow)
        self.action_delete_point.setObjectName("action_delete_point")
        self.action_delete_link = QtWidgets.QAction(MainWindow)
        self.action_delete_link.setObjectName("action_delete_link")
        self.action_edit_point = QtWidgets.QAction(MainWindow)
        self.action_edit_point.setObjectName("action_edit_point")
        self.action_edit_link = QtWidgets.QAction(MainWindow)
        self.action_edit_link.setObjectName("action_edit_link")
        self.action_show_dimensions = QtWidgets.QAction(MainWindow)
        self.action_show_dimensions.setCheckable(True)
        self.action_show_dimensions.setObjectName("action_show_dimensions")
        self.action_show_point_mark = QtWidgets.QAction(MainWindow)
        self.action_show_point_mark.setCheckable(True)
        self.action_show_point_mark.setChecked(True)
        self.action_show_point_mark.setObjectName("action_show_point_mark")
        self.action_about_qt = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/qt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_about_qt.setIcon(icon24)
        self.action_about_qt.setObjectName("action_about_qt")
        self.action_load_file = QtWidgets.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/loadfile.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_load_file.setIcon(icon25)
        self.action_load_file.setObjectName("action_load_file")
        self.action_zoom_to_fit = QtWidgets.QAction(MainWindow)
        self.action_zoom_to_fit.setIcon(icon14)
        self.action_zoom_to_fit.setObjectName("action_zoom_to_fit")
        self.action_path_style = QtWidgets.QAction(MainWindow)
        self.action_path_style.setCheckable(True)
        self.action_path_style.setChecked(True)
        self.action_path_style.setObjectName("action_path_style")
        self.action_pyslvs_com = QtWidgets.QAction(MainWindow)
        self.action_pyslvs_com.setIcon(icon)
        self.action_pyslvs_com.setObjectName("action_pyslvs_com")
        self.action_show_console = QtWidgets.QAction(MainWindow)
        self.action_show_console.setCheckable(True)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/konsole.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_show_console.setIcon(icon26)
        self.action_show_console.setObjectName("action_show_console")
        self.action_example = QtWidgets.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/example.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_example.setIcon(icon27)
        self.action_example.setObjectName("action_example")
        self.action_check_update = QtWidgets.QAction(MainWindow)
        self.action_check_update.setObjectName("action_check_update")
        self.action_new_window = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/new_window.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new_window.setIcon(icon28)
        self.action_new_window.setObjectName("action_new_window")
        self.action_scale_points = QtWidgets.QAction(MainWindow)
        self.action_scale_points.setObjectName("action_scale_points")
        self.action_save = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/yaml.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon29)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(MainWindow)
        self.action_save_as.setIcon(icon29)
        self.action_save_as.setObjectName("action_save_as")
        self.action_documentation = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/collections.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_documentation.setIcon(icon30)
        self.action_documentation.setObjectName("action_documentation")
        self.action_set_link_length = QtWidgets.QAction(MainWindow)
        self.action_set_link_length.setObjectName("action_set_link_length")
        self.action_preference = QtWidgets.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icons/settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_preference.setIcon(icon31)
        self.action_preference.setObjectName("action_preference")
        self.action_screenshot = QtWidgets.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icons/capture.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_screenshot.setIcon(icon32)
        self.action_screenshot.setObjectName("action_screenshot")
        self.menu_file.addAction(self.action_new_project)
        self.menu_file.addAction(self.action_load_file)
        self.menu_file.addAction(self.action_example)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_save_as)
        self.menu_file.addAction(self.action_screenshot)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_full_screen)
        self.menu_file.addAction(self.action_new_window)
        self.menu_file.addAction(self.action_exit)
        self.menu_mechanism.addAction(self.action_new_point)
        self.menu_mechanism.addAction(self.action_new_link)
        self.menu_mechanism.addSeparator()
        self.menu_mechanism.addAction(self.action_edit_point)
        self.menu_mechanism.addAction(self.action_edit_link)
        self.menu_mechanism.addSeparator()
        self.menu_mechanism.addAction(self.action_delete_point)
        self.menu_mechanism.addAction(self.action_delete_link)
        self.menu_mechanism.addSeparator()
        self.menu_mechanism.addAction(self.action_scale_points)
        self.menu_mechanism.addAction(self.action_set_link_length)
        self.menu_options.addAction(self.action_show_console)
        self.menu_options.addSeparator()
        self.menu_options.addAction(self.action_zoom_to_fit)
        self.menu_options.addAction(self.action_show_point_mark)
        self.menu_options.addAction(self.action_show_dimensions)
        self.menu_options.addAction(self.action_path_style)
        self.menu_options.addSeparator()
        self.menu_options.addAction(self.action_preference)
        self.menu_help.addAction(self.action_pyslvs_com)
        self.menu_help.addAction(self.action_github_repository)
        self.menu_help.addAction(self.action_documentation)
        self.menu_help.addAction(self.action_mde_tw)
        self.menu_help.addSeparator()
        self.menu_help.addAction(self.action_check_update)
        self.menu_help.addSeparator()
        self.menu_help.addAction(self.action_about_qt)
        self.menu_help.addAction(self.action_about)
        self.menu_bar.addAction(self.menu_file.menuAction())
        self.menu_bar.addAction(self.menu_edit.menuAction())
        self.menu_bar.addAction(self.menu_mechanism.menuAction())
        self.menu_bar.addAction(self.menu_options.menuAction())
        self.menu_bar.addAction(self.menu_help.menuAction())

        self.retranslateUi(MainWindow)
        self.synthesis_tab_widget.setCurrentIndex(-1)
        self.action_exit.triggered.connect(MainWindow.close)
        self.action_show_console.toggled['bool'].connect(self.console_widget.setVisible)
        self.clear_console.clicked.connect(self.console_widget_browser.clear)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Pyslvs - Untitled"))
        self.entities_tab.setTabText(self.entities_tab.indexOf(self.PointsTab), _translate("MainWindow", "Points"))
        self.entities_tab.setTabText(self.entities_tab.indexOf(self.LinksTab), _translate("MainWindow", "Links"))
        self.entities_tab.setTabText(self.entities_tab.indexOf(self.tab), _translate("MainWindow", "Formulas"))
        self.mechanism_storage_name_tag_text.setText(_translate("MainWindow", "Mechanism name:"))
        self.mechanism_storage_name_tag.setPlaceholderText(_translate("MainWindow", "Prototype"))
        self.mechanism_storage.setStatusTip(_translate("MainWindow", "All expressions of this project. They will be saving with database."))
        self.mechanism_storage_add.setStatusTip(_translate("MainWindow", "Capture the current expression then save to the list."))
        self.mechanism_storage_add.setText(_translate("MainWindow", "Add"))
        self.mechanism_storage_restore.setStatusTip(_translate("MainWindow", "Restore the selected expression."))
        self.mechanism_storage_restore.setText(_translate("MainWindow", "Restore"))
        self.mechanism_storage_copy.setStatusTip(_translate("MainWindow", "Copy the specified mechanism expression as string format."))
        self.mechanism_storage_copy.setText(_translate("MainWindow", "Copy"))
        self.mechanism_storage_paste.setStatusTip(_translate("MainWindow", "Append a new expression to list by string format."))
        self.mechanism_storage_paste.setText(_translate("MainWindow", "Paste"))
        self.mechanism_storage_delete.setStatusTip(_translate("MainWindow", "Delete the specified mechanism."))
        self.mechanism_storage_delete.setText(_translate("MainWindow", "Delete"))
        self.main_panel.setTabText(self.main_panel.indexOf(self.mechanism_tab), _translate("MainWindow", "Mechanism"))
        self.main_panel.setTabText(self.main_panel.indexOf(self.inputs_tab), _translate("MainWindow", "Inputs"))
        self.main_panel.setTabText(self.main_panel.indexOf(self.synthesis_tab), _translate("MainWindow", "Synthesis"))
        self.main_panel.setTabText(self.main_panel.indexOf(self.project_tab), _translate("MainWindow", "Project"))
        self.zoom_button.setText(_translate("MainWindow", "200px"))
        self.zoom_bar.setStatusTip(_translate("MainWindow", "Adjust the slider to change demo size."))
        self.reset_canvas_button.setStatusTip(_translate("MainWindow", "Zoom to fit."))
        self.alignment_button.setStatusTip(_translate("MainWindow", "Point alignment: Align the selected points with a value of x or y axis."))
        self.free_move_button.setStatusTip(_translate("MainWindow", "Free mode: Allow selected point coordinates to be edited by dragging."))
        self.dof_lable.setToolTip(_translate("MainWindow", "Degree of Freedom"))
        self.dof_lable.setText(_translate("MainWindow", "DOF"))
        self.conflict.setStatusTip(_translate("MainWindow", "Show Conflict Guide tool tips."))
        self.conflict.setText(_translate("MainWindow", "<html><head/><body><p><img width=\'30\' src=\":/icons/conflict.png\"/></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><img width=\'30\' src=\":/icons/konsole.png\"/></p></body></html>"))
        self.console_disconnect_button.setStatusTip(_translate("MainWindow", "Disconnect from GUI console."))
        self.console_connect_button.setStatusTip(_translate("MainWindow", "Connect to GUI console."))
        self.clear_console.setStatusTip(_translate("MainWindow", "Clear GUI console."))
        self.menu_file.setTitle(_translate("MainWindow", "&File"))
        self.menu_mechanism.setTitle(_translate("MainWindow", "&Mechanism"))
        self.menu_options.setTitle(_translate("MainWindow", "&Options"))
        self.menu_help.setTitle(_translate("MainWindow", "&Help"))
        self.menu_edit.setTitle(_translate("MainWindow", "&Edit"))
        self.action_new_project.setText(_translate("MainWindow", "&New Project"))
        self.action_new_project.setStatusTip(_translate("MainWindow", "Reset to a new wrokbook."))
        self.action_new_project.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_new_point.setText(_translate("MainWindow", "New &Point"))
        self.action_new_point.setStatusTip(_translate("MainWindow", "Add a new point representative of a node on a machine."))
        self.action_new_point.setShortcut(_translate("MainWindow", "P"))
        self.action_new_link.setText(_translate("MainWindow", "New &Link"))
        self.action_new_link.setStatusTip(_translate("MainWindow", "Add  a link between two points."))
        self.action_new_link.setShortcut(_translate("MainWindow", "L"))
        self.action_exit.setText(_translate("MainWindow", "&Quit"))
        self.action_exit.setStatusTip(_translate("MainWindow", "Exit Pyslvs."))
        self.action_mde_tw.setText(_translate("MainWindow", "&MDE.tw"))
        self.action_mde_tw.setStatusTip(_translate("MainWindow", "Goto Kmolab learn about more."))
        self.action_github_repository.setText(_translate("MainWindow", "Git&hub Repository"))
        self.action_github_repository.setStatusTip(_translate("MainWindow", "Goto Github storage of Pyslvs."))
        self.action_about.setText(_translate("MainWindow", "&About Pyslvs"))
        self.action_about.setStatusTip(_translate("MainWindow", "Version and introduction of Pyslvs."))
        self.action_about.setShortcut(_translate("MainWindow", "F1"))
        self.action_full_screen.setText(_translate("MainWindow", "&Full Screen"))
        self.action_full_screen.setStatusTip(_translate("MainWindow", "Let the window truns to full screen."))
        self.action_full_screen.setShortcut(_translate("MainWindow", "Shift+F1"))
        self.action_delete_point.setText(_translate("MainWindow", "&Delete Point"))
        self.action_delete_point.setStatusTip(_translate("MainWindow", "Delete an existing point."))
        self.action_delete_link.setText(_translate("MainWindow", "Delete Li&nk"))
        self.action_delete_link.setStatusTip(_translate("MainWindow", "Delete an existing link."))
        self.action_edit_point.setText(_translate("MainWindow", "&Edit Point"))
        self.action_edit_point.setStatusTip(_translate("MainWindow", "Edit an existing point."))
        self.action_edit_link.setText(_translate("MainWindow", "Ed&it Link"))
        self.action_edit_link.setStatusTip(_translate("MainWindow", "Edit an existing link."))
        self.action_show_dimensions.setText(_translate("MainWindow", "Display &Dimensions"))
        self.action_show_dimensions.setStatusTip(_translate("MainWindow", "Display dimensions in the canvas."))
        self.action_show_dimensions.setShortcut(_translate("MainWindow", "F11"))
        self.action_show_point_mark.setText(_translate("MainWindow", "Display Point &Mark"))
        self.action_show_point_mark.setStatusTip(_translate("MainWindow", "Display point mark in canvas."))
        self.action_show_point_mark.setShortcut(_translate("MainWindow", "F10"))
        self.action_about_qt.setText(_translate("MainWindow", "About &Qt"))
        self.action_about_qt.setStatusTip(_translate("MainWindow", "Show Qt about."))
        self.action_load_file.setText(_translate("MainWindow", "L&oad File"))
        self.action_load_file.setStatusTip(_translate("MainWindow", "Load Project from *.pyslvs project or *.slvs file."))
        self.action_load_file.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_zoom_to_fit.setText(_translate("MainWindow", "&Zoom to Fit"))
        self.action_zoom_to_fit.setStatusTip(_translate("MainWindow", "Zoom in as mechanism size."))
        self.action_zoom_to_fit.setShortcut(_translate("MainWindow", "Home"))
        self.action_path_style.setText(_translate("MainWindow", "Solid Style &Path"))
        self.action_path_style.setStatusTip(_translate("MainWindow", "Show path in solid line style, otherwise will be isolated dots."))
        self.action_pyslvs_com.setText(_translate("MainWindow", "&Pyslvs.com"))
        self.action_pyslvs_com.setStatusTip(_translate("MainWindow", "Goto Pyslvs home page."))
        self.action_show_console.setText(_translate("MainWindow", "&Show GUI Console"))
        self.action_show_console.setStatusTip(_translate("MainWindow", "Open a widget to show console output."))
        self.action_show_console.setShortcut(_translate("MainWindow", "F12"))
        self.action_example.setText(_translate("MainWindow", "&Example ..."))
        self.action_example.setStatusTip(_translate("MainWindow", "Load a example."))
        self.action_example.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.action_check_update.setText(_translate("MainWindow", "&Check for Updates"))
        self.action_check_update.setStatusTip(_translate("MainWindow", "Check the lastest version of Pyslvs from Github."))
        self.action_new_window.setText(_translate("MainWindow", "New &Window"))
        self.action_new_window.setStatusTip(_translate("MainWindow", "Open a new Pyslvs window."))
        self.action_scale_points.setText(_translate("MainWindow", "&Scale Mechanism"))
        self.action_scale_points.setStatusTip(_translate("MainWindow", "Scale the mechanism by specified factor."))
        self.action_save.setText(_translate("MainWindow", "&Save"))
        self.action_save.setStatusTip(_translate("MainWindow", "Save to a YAML-based format."))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_save_as.setText(_translate("MainWindow", "Save &As ..."))
        self.action_save_as.setStatusTip(_translate("MainWindow", "Save to another YAML file."))
        self.action_save_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_documentation.setText(_translate("MainWindow", "&Documentation"))
        self.action_documentation.setStatusTip(_translate("MainWindow", "See the documentation on Readthedocs."))
        self.action_set_link_length.setText(_translate("MainWindow", "Se&t Link Length"))
        self.action_preference.setText(_translate("MainWindow", "P&references"))
        self.action_preference.setShortcut(_translate("MainWindow", "F2"))
        self.action_screenshot.setText(_translate("MainWindow", "Screenshot"))
        self.action_screenshot.setShortcut(_translate("MainWindow", "Ctrl+P"))
from pyslvs_ui import icons_rc
